name: Create and publish the container

on:
  - push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Fetch NXP Compiler Addons
        # The URL and the current version can be found here:
        # https://www.nxp.com/lgfiles/updates/mcuxpresso/components.json
        # (id: arm-toolchain-addons)
        run: >-
          wget https://www.nxp.com/lgfiles/updates/mcuxpresso/AdditionalCLibs-12.3.1-210224-linux.tar.xz &&
          mkdir libs &&
          tar xvf AdditionalCLibs-12.3.1-210224-linux.tar.xz -C libs

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Create docker tag based on matrix build
        id: docker_tag
        run: echo "tag=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:12.3.rel1" >> $GITHUB_OUTPUT

      - name: Build and push container image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          platforms: linux/amd64
          # platforms: linux/amd64,linux/arm64/v8
          tags: ${{ steps.docker_tag.outputs.tag }}
          labels: ${{ steps.meta.outputs.labels }}